<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.jianlu8023.demo</groupId>
    <artifactId>java-demo</artifactId>
    <version>1.0.0-ALPHA</version>

    <packaging>pom</packaging>
    <name>java-demo</name>
    <description>java-demo</description>

    <modules>
        <module>java-demo-docker-deployment</module>
        <module>java-demo-multi-datasource</module>
        <module>java-demo-utils</module>
        <module>java-demo-mybatisplus-batchinsert</module>
        <module>java-demo-format</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.7.16</spring-boot.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <grpc.version>1.26.0</grpc.version>
        <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
        <protoc.version>3.5.1</protoc.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <hutool-all.version>5.8.25</hutool-all.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.11</junit.version>
        <datafaker.version>1.4.0</datafaker.version>
        <fastjson.version>2.0.22</fastjson.version>
        <DmJdbcDriver18.version>8.1.1.193</DmJdbcDriver18.version>
        <mysql-connector-j.version>8.0.33</mysql-connector-j.version>
        <druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
        <mybatis-plus-boot-starter.version>3.5.3.2</mybatis-plus-boot-starter.version>

        <!--<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>-->
        <!--latest-->
        <exec-maven-plugin.version>3.2.0</exec-maven-plugin.version>

        <!--<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>-->
        <!--latest-->
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>

        <!--<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>-->
        <!--latest-->
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>

        <!--<maven-jar-plugin.version>2.4</maven-jar-plugin.version>-->
        <!--latest-->
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>

        <!--<maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>-->
        <!--latest-->
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>

        <!--<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>-->
        <!--latest-->
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>

        <grpc.version>1.26.0</grpc.version>
        <protobuf.plugin.version>0.6.1</protobuf.plugin.version>
        <protoc.version>3.5.1</protoc.version>
        <mysql-connector-j.version>8.0.33</mysql-connector-j.version>
        <dynamic-datasource-spring-boot-starter.version>4.3.0</dynamic-datasource-spring-boot-starter.version>
        <pagehelper-spring-boot-starter.version>2.1.0</pagehelper-spring-boot-starter.version>
        <random-beans.version>3.9.0</random-beans.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <dependency>
                <groupId>net.datafaker</groupId>
                <artifactId>datafaker</artifactId>
                <version>${datafaker.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.dameng</groupId>
                <artifactId>DmJdbcDriver18</artifactId>
                <version>${DmJdbcDriver18.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql-connector-j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <!--<dependency>-->
            <!--    <groupId>com.dameng</groupId>-->
            <!--    <artifactId>Dm8JdbcDriver18</artifactId>-->
            <!--    <version>8.1.1.193</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/src/main/resources/libraries/DmJdbcDriver18-8.1.1.193.jar</systemPath>-->
            <!--</dependency>-->

            <!-- 引入devtools支持 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-datasource-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.benas</groupId>
                <artifactId>random-beans</artifactId>
                <version>${random-beans.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <!-- os-maven-plugin 插件，从 OS 系统中获取参数 -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>

        <pluginManagement>

            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <!--执行main方法-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <classpathScope>test</classpathScope>
                    </configuration>
                </plugin>

                <!--定义项目的编译环境-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <!--添加配置跳过测试-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <!-- 热部署生效 -->
                        <fork>false</fork>
                        <skip>true</skip>
                        <!--添加资源-->
                        <addResources>true</addResources>
                        <outputDirectory>${project.build.directory}/jar</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 打JAR包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <!-- 不打包资源文件（配置文件和依赖包分开） -->
                        <excludes>
                            <exclude>*.yaml</exclude>
                            <exclude>*.xml</exclude>
                            <exclude>*.txt</exclude>
                            <exclude>*.p12</exclude>
                            <exclude>*.properties</exclude>
                            <!--resources文件夹下文件夹排除-->
                            <exclude>mapper/</exclude>
                        </excludes>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
                                <classpathPrefix>lib/</classpathPrefix>
                                <!-- jar包不包含唯一版本标识 -->
                                <useUniqueVersions>false</useUniqueVersions>
                                <!--指定入口类 -->
                                <!--<mainClass>com.github.jianlu8023.javastudy.Application</mainClass>-->
                            </manifest>
                            <manifestEntries>
                                <!--MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
                                <Class-Path>./config/</Class-Path>
                            </manifestEntries>
                        </archive>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                    </configuration>
                </plugin>

                <!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- 该插件的作用是用于复制指定的文件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution> <!-- 复制配置文件 -->
                            <id>copy-resources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <includes>
                                            <exclude>*.yaml</exclude>
                                            <exclude>*.xml</exclude>
                                            <exclude>*.txt</exclude>
                                            <exclude>*.properties</exclude>
                                            <exclude>*.p12</exclude>
                                            <exclude>mapper/</exclude>
                                        </includes>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/config</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <!--    https://blog.csdn.net/KimmKing/article/details/82421220-->
</project>
