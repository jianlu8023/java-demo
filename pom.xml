<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.jianlu8023.demo</groupId>
    <artifactId>java-demo</artifactId>
    <version>1.0.0-ALPHA</version>

    <packaging>pom</packaging>
    <name>java-demo</name>
    <description>java-demo</description>

    <modules>
        <module>java-demo-docker-deploy</module>
        <module>java-demo-format</module>
        <module>java-demo-grpc</module>
        <module>java-demo-https</module>
        <module>java-demo-integration</module>
        <module>java-demo-ipfs</module>
        <module>java-demo-jsp</module>
        <module>java-demo-load-properties</module>
        <module>java-demo-logging</module>
        <module>java-demo-mock</module>
        <module>java-demo-multi-datasource</module>
        <module>java-demo-mybatisplus-batchinsert</module>
        <module>java-demo-normal-maven</module>
        <module>java-demo-redis</module>
        <module>java-demo-thymeleaf</module>
        <module>java-demo-utils</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.7.18</spring-boot.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <grpc.version>1.26.0</grpc.version>
        <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
        <protoc.version>3.5.1</protoc.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <hutool-all.version>5.8.25</hutool-all.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.11</junit.version>
        <datafaker.version>1.4.0</datafaker.version>
        <fastjson.version>2.0.22</fastjson.version>
        <DmJdbcDriver18.version>8.1.1.193</DmJdbcDriver18.version>
        <mysql-connector-j.version>8.0.33</mysql-connector-j.version>
        <druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
        <mybatis-plus-boot-starter.version>3.5.3.2</mybatis-plus-boot-starter.version>
        <!--multidb 3.5.5-->
        <!--<mybatis-plus-boot-starter.version>3.5.5</mybatis-plus-boot-starter.version>-->

        <!--<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>-->
        <!--latest-->
        <exec-maven-plugin.version>3.2.0</exec-maven-plugin.version>

        <!--<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>-->
        <!--latest-->
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>

        <!--<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>-->
        <!--latest-->
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>

        <!--<maven-jar-plugin.version>2.4</maven-jar-plugin.version>-->
        <!--latest-->
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>

        <!--<maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>-->
        <!--latest-->
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>

        <!--<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>-->
        <!--latest-->
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>

        <grpc.version>1.26.0</grpc.version>
        <protobuf.plugin.version>0.6.1</protobuf.plugin.version>
        <protoc.version>3.5.1</protoc.version>
        <mysql-connector-j.version>8.0.33</mysql-connector-j.version>
        <dynamic-datasource-spring-boot-starter.version>4.3.0</dynamic-datasource-spring-boot-starter.version>
        <pagehelper-spring-boot-starter.version>2.1.0</pagehelper-spring-boot-starter.version>
        <random-beans.version>3.9.0</random-beans.version>
        <fabric-gateway-java.version>2.2.9</fabric-gateway-java.version>
        <jmockdata.version>4.3.0</jmockdata.version>
        <mapstruct.version>1.1.0.Final</mapstruct.version>
        <p6spy.version>3.9.1</p6spy.version>
        <commons-lang3.version>3.10</commons-lang3.version>
        <javafaker.version>1.0.2</javafaker.version>
        <fabric-sdk-java.version>2.2.9</fabric-sdk-java.version>

        <selenium-java.version>3.141.59</selenium-java.version>
        <!--    latest-->
        <!--<selenium-java.version>4.19.1</selenium-java.version>-->

        <selenium-server.version>3.141.59</selenium-server.version>

        <httpclient.version>4.5.14</httpclient.version>
        <httpcore.version>4.4.16</httpcore.version>
        <guava.version>30.1.1-jre</guava.version>
        <sqlite-jdbc.version>3.8.9.1</sqlite-jdbc.version>
        <httpmime.version>4.5.9</httpmime.version>
        <okhttp.version>4.11.0</okhttp.version>
        <jsoup.version>1.16.1</jsoup.version>
        <java-ipfs-api.version>v1.4.0</java-ipfs-api.version>
        <rocksdbjni.version>8.3.2</rocksdbjni.version>
        <netty-all.version>4.1.96.Final</netty-all.version>
        <netty-tcnative-boringssl-static.version>2.0.9.Final</netty-tcnative-boringssl-static.version>
        <disruptor.version>disruptor</disruptor.version>
        <dubbo-spring-boot-starter.version>2.0.0</dubbo-spring-boot-starter.version>
        <zkclient.version>0.11</zkclient.version>
        <mybatis-generator-maven-plugin.version>1.4.2</mybatis-generator-maven-plugin.version>

        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--spring-boot-dependencies-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--junit-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--hutool-all-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <!--datafaker-->
            <dependency>
                <groupId>net.datafaker</groupId>
                <artifactId>datafaker</artifactId>
                <version>${datafaker.version}</version>
            </dependency>
            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--commons-lang3-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!--DmJdbcDriver18-->
            <dependency>
                <groupId>com.dameng</groupId>
                <artifactId>DmJdbcDriver18</artifactId>
                <version>${DmJdbcDriver18.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>com.dameng</groupId>
                <artifactId>Dm8JdbcDriver18</artifactId>
                <version>8.1.1.193</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/libraries/DmJdbcDriver18-8.1.1.193.jar</systemPath>
            </dependency>-->

            <!--td https://zhuanlan.zhihu.com/p/686885373 -->
            <!--mapstruct-jdk8-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!--mapstruct-processor-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!--mysql-connector-j-->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql-connector-j.version}</version>
            </dependency>
            <!--druid-spring-boot-starter-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>
            <!--p6spy-->
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>
            <!--grpc-netty-->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <!--grpc-protobuf-->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <!--grpc-stub-->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <!--spring-boot-configuration-processor-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <optional>true</optional>
            </dependency>
            <!--spring-boot-autoconfigure-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <optional>true</optional>
            </dependency>
            <!--mybatis-plus-boot-starter-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <!-- 引入devtools支持 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>
            <!--dynamic-datasource-spring-boot-starter-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-datasource-spring-boot-starter.version}</version>
            </dependency>
            <!--pagehelper-spring-boot-starter-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>
            <!--random-beans-->
            <dependency>
                <groupId>io.github.benas</groupId>
                <artifactId>random-beans</artifactId>
                <version>${random-beans.version}</version>
            </dependency>
            <!--jmockdata-->
            <dependency>
                <groupId>com.github.jsonzou</groupId>
                <artifactId>jmockdata</artifactId>
                <version>${jmockdata.version}</version>
            </dependency>
            <!--fabric-gateway-java-->
            <dependency>
                <groupId>org.hyperledger.fabric</groupId>
                <artifactId>fabric-gateway-java</artifactId>
                <version>${fabric-gateway-java.version}</version>
            </dependency>
            <!--javafaker-->
            <dependency>
                <groupId>com.github.javafaker</groupId>
                <artifactId>javafaker</artifactId>
                <version>${javafaker.version}</version> <!-- Use the latest version available -->
            </dependency>
            <!--fabric-sdk-java-->
            <dependency>
                <groupId>org.hyperledger.fabric-sdk-java</groupId>
                <artifactId>fabric-sdk-java</artifactId>
                <version>${fabric-sdk-java.version}</version>
            </dependency>
            <!--下方两个版本保持一致-->
            <!--selenium-java-->
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium-java.version}</version>
            </dependency>
            <!--selenium-server-->
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-server</artifactId>
                <version>${selenium-server.version}</version>
            </dependency>
            <!--httpclient-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--httpcore-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore.version}</version>
            </dependency>
            <!--httpmime-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${httpmime.version}</version>
            </dependency>
            <!--guava-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!--sqlite-jdbc-->
            <dependency>
                <groupId>org.xerial</groupId>
                <artifactId>sqlite-jdbc</artifactId>
                <version>${sqlite-jdbc.version}</version>
            </dependency>
            <!--okhttp-->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <!--jsoup-->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <!--java-ipfs-api-->
            <dependency>
                <groupId>com.github.ipfs</groupId>
                <artifactId>java-ipfs-api</artifactId>
                <version>${java-ipfs-api.version}</version>
            </dependency>
            <!--rocksdbjni-->
            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdbjni.version}</version>
            </dependency>
            <!--netty-all-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty-all.version}</version>
            </dependency>
            <!--netty-tcnative-boringssl-static-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-tcnative-boringssl-static</artifactId>
                <version>${netty-tcnative-boringssl-static.version}</version>
            </dependency>
            <!--disruptor-->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <!--dubbo-spring-boot-starter-->
            <dependency>
                <groupId>com.alibaba.spring.boot</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo-spring-boot-starter.version}</version>
            </dependency>
            <!--zkclient-->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>4.8.4</version>
                <optional>true</optional>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <!-- os-maven-plugin 插件，从 OS 系统中获取参数 -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>

        <pluginManagement>

            <plugins>
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>${mybatis-generator-maven-plugin.version}</version>
                    <configuration>
                        <configurationFile>GeneratorMapper.xml</configurationFile>
                        <verbose>true</verbose>
                        <overwrite>true</overwrite>
                    </configuration>
                </plugin>

                <!-- maven-assembly-plugin -->
                <!-- https://maven.apache.org/plugins/maven-assembly-plugin/index.html -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <descriptorRefs>jar-with-dependencies</descriptorRefs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- license-maven-plugin -->
                <!-- https://mathieu.carbou.me/license-maven-plugin/reports/3.0/plugin-info.html -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>4.6</version> <!-- 请检查最新版本 -->
                    <configuration>
                        <quiet>true</quiet>
                        <!--HEADER文件-->
                        <header>src/main/resources/license-header.txt</header>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                            <exclude>*.sh</exclude>
                            <exclude>*.yml</exclude>
                            <exclude>.editorconfig</exclude>
                            <exclude>.gitignore</exclude>
                            <exclude>**/*.md</exclude>
                            <exclude>**/*.xml</exclude>
                            <exclude>**/generated/**</exclude>
                        </excludes>
                        <!--严格检查-->
                        <strictCheck>true</strictCheck>
                        <mapping>
                            <java>SLASHSTAR_STYLE</java>
                        </mapping>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>remove</goal>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <!-- versions-maven-plugin -->
                <!-- mvn versions:set -DnewVersion=1.1 -->
                <!-- 多模块 没有继承关系 mvn versions:set -DprocessAllModules=true -DnewVersion=1.1 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.17.1</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>


                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.4.0</version>
                    <configuration>
                        <useCache>true</useCache>
                    </configuration>
                    <executions>
                        <execution>
                            <id>prepare-war</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>exploded</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <!--
                    问题背景：本地的一个有前后端的demo有用（没有严格的前后端分离），静态资源放在webapp下面。更新静态资源文件之后，没有生效。
                    问题原因：浏览器缓存。
                    解决方案：使用 maven 的 com.google.code.maven-replacer-plugin 插件，在项目打包 package 时自动为静态文件追加 xxx.js?v=time 的后缀，从而解决浏览器修改后浏览器缓存问题，此插件只会在生成 war 包源码时生效，不需要修改任何代码。

                    原始文件和最终生成效果
                        原始文件：
                            <script src="${resource!}/js/xxx/xxx.js"></script>
                        打包后：
                            <script src="${resource!}/js/xxx/xxx.js?v=20180316082543"></script>

                    文件引用结尾处，必须是pom.xml文件中添加的规则：
                        <script src="${resource!}/js/xxx/xxx.js" type="text/javascript"></script>
                        <link href="${resource!}/css/xxx/xxx.css" rel="stylesheet" type="text/css">
                -->
                <!-- https://www.cnblogs.com/yclimb/p/9934102.html -->
                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <version>1.5.3</version>
                    <executions>
                        <!-- 打包前进行替换 -->
                        <execution>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>replace</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- 自动识别到项目target文件夹 -->
                        <basedir>${build.directory}</basedir>
                        <!-- 替换的文件所在目录规则 -->
                        <includes>
                            <include>${build.finalName}/WEB-INF/views/*.html</include>
                            <include>${build.finalName}/WEB-INF/views/**/*.html</include>
                        </includes>
                        <replacements>
                            <!-- 更改规则，在css/js文件末尾追加?v=时间戳，反斜杠表示字符转义 -->
                            <replacement>
                                <token>\.css\"</token>
                                <value>.css?v=${maven.build.timestamp}\"</value>
                            </replacement>
                            <replacement>
                                <token>\.css\'</token>
                                <value>.css?v=${maven.build.timestamp}\'</value>
                            </replacement>
                            <replacement>
                                <token>\.js\"</token>
                                <value>.js?v=${maven.build.timestamp}\"</value>
                            </replacement>
                            <replacement>
                                <token>\.js\'</token>
                                <value>.js?v=${maven.build.timestamp}\'</value>
                            </replacement>
                        </replacements>
                    </configuration>
                </plugin>


                <!-- maven-release-plugin -->
                <!-- https://blog.csdn.net/taiyangdao/article/details/82658799 -->
                <!-- https://maven.apache.org/maven-release/maven-release-plugin/ -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>

                <!-- cobertura-maven-plugin -->
                <!-- https://blog.csdn.net/liqingjie_fjfz/article/details/47984337 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <!--执行main方法-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <classpathScope>test</classpathScope>
                    </configuration>
                </plugin>

                <!--定义项目的编译环境-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!--添加配置跳过测试-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>

                        <!-- 热部署生效 -->
                        <fork>false</fork>
                        <skip>true</skip>
                        <!--添加资源-->
                        <addResources>true</addResources>
                        <outputDirectory>${project.build.directory}/jar</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>

                </plugin>

                <!-- 打JAR包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <!-- 不打包资源文件（配置文件和依赖包分开） -->
                        <excludes>
                            <exclude>*.yaml</exclude>
                            <exclude>*.xml</exclude>
                            <exclude>*.txt</exclude>
                            <exclude>*.p12</exclude>
                            <exclude>*.properties</exclude>
                            <!--resources文件夹下文件夹排除-->
                            <exclude>mapper/</exclude>
                        </excludes>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
                                <classpathPrefix>lib/</classpathPrefix>
                                <!-- jar包不包含唯一版本标识 -->
                                <useUniqueVersions>false</useUniqueVersions>
                                <!--指定入口类 -->
                                <!--<mainClass>com.github.jianlu8023.javastudy.Application</mainClass>-->
                            </manifest>
                            <manifestEntries>
                                <!--MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
                                <Class-Path>./config/</Class-Path>
                            </manifestEntries>
                        </archive>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                    </configuration>
                </plugin>

                <!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- 该插件的作用是用于复制指定的文件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution> <!-- 复制配置文件 -->
                            <id>copy-resources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <includes>
                                            <exclude>*.yaml</exclude>
                                            <exclude>*.xml</exclude>
                                            <exclude>*.txt</exclude>
                                            <exclude>*.properties</exclude>
                                            <exclude>*.p12</exclude>
                                            <exclude>mapper/</exclude>
                                        </includes>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/config</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <!--    https://blog.csdn.net/KimmKing/article/details/82421220-->
</project>
