<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.7.18</version>
        <relativePath/>
    </parent>

    <groupId>com.github.jianlu8023</groupId>
    <artifactId>format-spring-boot-starter</artifactId>
    <version>1.0.0.RELEASE</version>

    <name>format-spring-boot-starter</name>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
    </dependencies>

    <build>
        <!--<resources>-->
        <!--    <resource>-->
        <!--        <directory>src/main/resources</directory>-->
        <!--        <filtering>true</filtering>-->
        <!--    </resource>-->
        <!--    <resource>-->
        <!--        <directory>${project.basedir}/lib</directory>-->
        <!--        <targetPath>BOOT-INF/lib/</targetPath>-->
        <!--        <includes>-->
        <!--            <include>**/*.jar</include>-->
        <!--        </includes>-->
        <!--    </resource>-->
        <!--    <resource>-->
        <!--        <directory>src/main/resources</directory>-->
        <!--        <targetPath>BOOT-INF/classes/</targetPath>-->
        <!--    </resource>-->
        <!--</resources>-->

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 如果没有该项配置devtools不会起作用，即应用不会restart -->
                    <!--<fork>true</fork>-->
                    <!--支持静态文件热部署-->
                    <addResources>true</addResources>
                    <!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>com.github.jianlu8023.format.FormatApplication</mainClass>

                    <!-- spring-boot-maven-plugin这个插件打包的Jar包可以直接运行，但是不可依赖, 添加如下配置使其可被依赖 -->
                    <classifier>exec</classifier>

                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <!--可以把依赖的包都打包到生成的Jar包中-->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!--将不需要转码的文件扩展名填入nonFilteredFileExtensions-->
                    <nonFilteredFileExtensions>
                        <!--<nonFilteredFileExtension>p12</nonFilteredFileExtension>-->
                        <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                        <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                        <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-static-files</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/static</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
