<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.18</version>
        <relativePath/>
    </parent>

    <groupId>com.github.jianlu8023</groupId>
    <artifactId>java-demo-integration</artifactId>
    <version>0.0.1</version>

    <name>java-demo-integration</name>
    <description>java-demo-integration</description>

    <url/>

    <licenses>
        <license/>
    </licenses>

    <developers>
        <developer/>
    </developers>

    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>

    <properties>
        <java.version>1.8</java.version>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>

        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>

        <mysql-connector-j.version>8.4.0</mysql-connector-j.version>
        <pagehelper-spring-boot-starter.version>2.1.0</pagehelper-spring-boot-starter.version>
        <dynamic-datasource-spring-boot-starter.version>4.3.0</dynamic-datasource-spring-boot-starter.version>
        <mybatis-plus-boot-starter.version>3.5.5</mybatis-plus-boot-starter.version>
        <sqlparser4.5.version>6.1.0</sqlparser4.5.version>
        <p6spy.version>3.9.1</p6spy.version>
        <druid-spring-boot-starter.version>1.2.23</druid-spring-boot-starter.version>
        <jmockdata.version>4.3.0</jmockdata.version>
        <commons-lang3.version>3.10</commons-lang3.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--  spring-boot-starter-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--    format-spring-boot-starter    -->
        <!-- <dependency> -->
        <!--     <groupId>com.github.jianlu8023.utils</groupId> -->
        <!--     <artifactId>format-spring-boot-starter</artifactId> -->
        <!--     <version>1.0.1.RELEASE</version> -->
        <!--     <scope>system</scope> -->
        <!--     <systemPath>${pom.basedir}/lib/format-spring-boot-starter-1.0.1.RELEASE.jar</systemPath> -->
        <!-- </dependency> -->
        <dependency>
            <groupId>com.gitee.jianlu8023</groupId>
            <artifactId>format-spring-boot-starter</artifactId>
            <version>1.0.3</version>
        </dependency>

        <!--   fastjson     -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>2.0.52</version>
        </dependency>

        <!--   okhttp     -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <!--   mysql-connector-j     -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql-connector-j.version}</version>
        </dependency>

        <!--    postgresql    -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.2</version>
        </dependency>

        <!--Dm8JdbcDriver18-->
        <dependency>
            <groupId>com.dameng</groupId>
            <artifactId>Dm8JdbcDriver18</artifactId>
            <version>1.0.0</version>
            <scope>system</scope>
            <systemPath>${pom.basedir}/lib/DmJdbcDriver18.jar</systemPath>
        </dependency>

        <!--spring-boot-starter-data-redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <exclusions>
                <!--    <exclusion>-->
                <!--        <groupId>io.lettuce</groupId>-->
                <!--        <artifactId>lettuce-core</artifactId>-->
                <!--    </exclusion>-->
            </exclusions>
        </dependency>

        <!--    commons-pool2    -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>

        <!--jedis-->
        <!--<dependency>-->
        <!--    <groupId>redis.clients</groupId>-->
        <!--    <artifactId>jedis</artifactId>-->
        <!--</dependency>-->

        <!--spring-boot-starter-data-mongodb-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <!--spring-boot-configuration-processor-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <!-- 开发热启动 -->
        <!--     spring-boot-devtools   -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!--    pagehelper-spring-boot-starter    -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper-spring-boot-starter.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.github.jsqlparser</groupId>
                    <artifactId>jsqlparser</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>mybatis</artifactId>
                    <groupId>org.mybatis</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--dynamic-datasource-spring-boot-starter-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
            <version>${dynamic-datasource-spring-boot-starter.version}</version>
        </dependency>

        <!--mybatis-plus-boot-starter-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <!--<artifactId>mybatis-plus-spring-boot3-starter</artifactId>-->
            <version>${mybatis-plus-boot-starter.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.github.jsqlparser</groupId>
                    <artifactId>jsqlparser</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--sqlparser4.5-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>sqlparser4.5</artifactId>
            <version>${sqlparser4.5.version}</version>
        </dependency>

        <!--druid-spring-boot-starter-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-spring-boot-starter.version}</version>
        </dependency>

        <!--p6spy-->
        <dependency>
            <groupId>p6spy</groupId>
            <artifactId>p6spy</artifactId>
            <version>${p6spy.version}</version>
        </dependency>

        <!--mock-spring-boot-starter-->
        <!-- <dependency> -->
        <!--     <groupId>com.github.jianlu8023.utils</groupId> -->
        <!--     <artifactId>mock-spring-boot-starter</artifactId> -->
        <!--     <version>1.0.1.ALPHA</version> -->
        <!--     <scope>system</scope> -->
        <!--     <systemPath>${pom.basedir}/lib/mock-spring-boot-starter-1.0.1.ALPHA.jar</systemPath> -->
        <!-- </dependency> -->
        <dependency>
            <groupId>com.gitee.jianlu8023</groupId>
            <artifactId>mock-spring-boot-starter</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!--jmockdata-->
        <!-- <dependency> -->
        <!--     <groupId>com.github.jsonzou</groupId> -->
        <!--     <artifactId>jmockdata</artifactId> -->
        <!--     <version>${jmockdata.version}</version> -->
        <!-- </dependency> -->

        <!--commons-lang3-->
        <!-- <dependency> -->
        <!--     <groupId>org.apache.commons</groupId> -->
        <!--     <artifactId>commons-lang3</artifactId> -->
        <!--     <version>${commons-lang3.version}</version> -->
        <!-- </dependency> -->

        <!-- spring-boot-starter-data-elasticsearch -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
        </dependency>


        <!-- easyexcel -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>4.0.3</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.16.1</version>
        </dependency>


        <!-- cache begin -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>2.9.3</version>
        </dependency>
        <!-- cache end -->


        <!--spring-boot-starter-test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>integration-${project.version}</finalName>

        <plugins>

            <!--执行main方法-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <classpathScope>test</classpathScope>
                </configuration>
            </plugin>

            <!--定义项目的编译环境-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>

                    <!-- 添加引入本地jar组件  此方法适用于低于 maven 的3.1版本之前-->
                    <!--<compilerArguments>-->
                    <!--    <extdirs>${project.basedir}\lib</extdirs>-->
                    <!--</compilerArguments>-->

                    <!-- 添加引入本地jar组件 -->
                    <compilerArgs>
                        <arg>-extdirs</arg>
                        <arg>${project.basedir}\lib</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!--添加配置跳过测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 热部署生效 -->
                    <fork>false</fork>
                    <mainClass>
                        com.github.jianlu8023.example.integration.IntegrationApplication
                    </mainClass>
                    <skip>true</skip>
                    <!--添加资源-->
                    <addResources>true</addResources>
                    <outputDirectory>${project.build.directory}/jar</outputDirectory>
                    <includeSystemScope>true</includeSystemScope>
                    <arguments>
                        <argument>${project.basedir}\lib</argument>
                    </arguments>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- 不打包资源文件（配置文件和依赖包分开） -->
                    <excludes>
                        <exclude>*.yaml</exclude>
                        <exclude>*.xml</exclude>
                        <exclude>*.txt</exclude>
                        <exclude>*.p12</exclude>
                        <exclude>*.properties</exclude>
                        <exclude>mapper/</exclude>
                        <exclude>static/</exclude>
                    </excludes>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- jar包不包含唯一版本标识 -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!--指定入口类 -->
                            <mainClass>
                                com.github.jianlu8023.example.integration.IntegrationApplication
                            </mainClass>
                        </manifest>
                        <manifestEntries>
                            <!--MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
                            <!-- <Class-Path>./config/ lib/Dm8JdbcDriver18-1.0.0.jar -->
                            <!--     lib/format-spring-boot-starter-1.0.1.RELEASE.jar -->
                            <!--     lib/mock-spring-boot-starter-1.0.1.ALPHA.jar -->
                            <!-- </Class-Path> -->
                            <Class-Path>./config/ lib/Dm8JdbcDriver18-1.0.0.jar
                            </Class-Path>
                        </manifestEntries>
                    </archive>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>

            <!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <!--<version>2.8</version>-->
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>compile</includeScope>
                            <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 该插件的作用是用于复制指定的文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--<version>3.1.0</version>-->
                <executions>
                    <execution> <!-- 复制配置文件 -->
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <exclude>*.yaml</exclude>
                                        <exclude>*.xml</exclude>
                                        <exclude>*.txt</exclude>
                                        <exclude>*.properties</exclude>
                                        <exclude>*.p12</exclude>
                                        <exclude>mapper/</exclude>
                                        <exclude>static/</exclude>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--依赖加速-->
    <repositories>
        <repository>
            <id>aliyun-mirror</id>
            <name>Aliyun Maven Repository</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>

        <repository>
            <id>tencent-mirror</id>
            <url>https://mirrors.tencent.com/nexus/repository/maven-central/</url>
        </repository>

        <repository>
            <id>netease-maven</id>
            <url>https://mirrors.163.com/maven/repository/maven-central/</url>
        </repository>

        <repository>
            <id>huawei-maven</id>
            <url>https://mirrors.huaweicloud.com/repository/maven/</url>
        </repository>

        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>


        <!--jitpack源-->
        <repository>
            <id>jitpack.io</id>
            <url>https://www.jitpack.io</url>
        </repository>
    </repositories>

    <!--插件加速-->
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Aliyun Maven Repository</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>
</project>
